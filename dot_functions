#!/usr/bin/env bash

dsr() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dsr <argument>' to run this command!\n"
	else
		docker ps -a | awk '{print $(NF)}' | grep $1 | xargs docker stop | xargs docker rm
	fi
}

dri() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dri <argument>' to run this command!\n"
	else
		docker images | awk 'NR>1 {print $1 ":" $2}' | grep $1 | xargs docker rmi
	fi
}

dsc() {
	if [ -z "$1" ]; then
		echo -e "Usage: 'dsc <argument>'\n"
	else
		docker ps | awk '{print $(NF)}' | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} $1 | xargs docker stop
	fi
}

function dip() {
	docker inspect $1 -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'
}

function activate() {
	if [[ -f "pyproject.toml" ]]; then
		poetry shell
		return
	fi

	for dir in {"venv","env",".env",".venv"}; do
		if [[ -d "$dir" ]] && [[ -f "$dir/bin/activate" ]]; then
			source "$dir/bin/activate"
			return
		fi
	done
	source $1/bin/activate
}

function logcat {
	pkg="$1"
	shift
	if [ -z "$pkg" ]; then
		>&2 echo 'Usage: logcat pkg ...'
		return 1
	fi

	uid="$(adb shell pm list package -U $pkg | sed 's/.*uid://')"
	if [ -z "$uid" ]; then
		>&2 echo "pkg '$pkg' not found"
		return 1
	fi

	adb logcat --uid="$uid" "$@"
}
