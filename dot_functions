#!/usr/bin/env bash

dsr() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dsr <argument>' to run this command!\n"
	else
		docker ps -a | awk '{print $(NF)}' | grep $1 | xargs docker stop | xargs docker rm
	fi
}

dri() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dri <argument>' to run this command!\n"
	else
		docker images | awk 'NR>1 {print $1 ":" $2}' | grep $1 | xargs docker rmi
	fi
}

dsc() {
	if [ -z "$1" ]; then
		echo -e "Usage: 'dsc <argument>'\n"
	else
		docker ps | awk '{print $(NF)}' | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} $1 | xargs docker stop
	fi
}

function dip() {
	docker inspect $1 -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'
}

function activate() {
	if [[ -f "pyproject.toml" ]]; then
		if poetry shell; then
			return
		fi
	fi

	for dir in {"venv","env",".env",".venv"}; do
		if [[ -d "$dir" ]] && [[ -f "$dir/bin/activate" ]]; then
			# shellcheck disable=SC1091
			if source "$dir/bin/activate"; then
				return
			fi
		fi
	done
	# shellcheck disable=SC1091,SC2086
	source $1/bin/activate
}

function urlencode() {
	if [ -z "$1" ]; then
		echo -e "Call 'urlencode <argument>' to run this command!\n"
		return
	fi

	jq -rn --arg x "$1" '$x|@uri'
}

function cheat() {
	if [ -z "$1" ]; then
		echo -e "Usage: 'cheat <command>'\n"
	else
		curl -s cheat.sh/"$1" | bat --file-name "cheat.sh/$1" --style=header-filename,grid
	fi
}
