#!/usr/bin/env bash

dsr() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dsr <argument>' to run this command!\n"
	else
		docker ps -a | awk '{print $(NF)}' | grep $1 | xargs docker stop | xargs docker rm
	fi
}

dri() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'dri <argument>' to run this command!\n"
	else
		docker images | awk 'NR>1 {print $1 ":" $2}' | grep $1 | xargs docker rmi
	fi
}

dsc() {
	if [ -z "$1" ]; then
		echo -e "Usage: 'dsc <argument>'\n"
	else
		docker ps | awk '{print $(NF)}' | grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} $1 | xargs docker stop
	fi
}

function dip() {
	docker inspect $1 -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'
}

function activate() {
	if [[ -f "pyproject.toml" ]]; then
		if poetry shell; then
			return
		fi
	fi

	for dir in {"venv","env",".env",".venv"}; do
		if [[ -d "$dir" ]] && [[ -f "$dir/bin/activate" ]]; then
			# shellcheck disable=SC1091
			if source "$dir/bin/activate"; then
				return
			fi
		fi
	done
	# shellcheck disable=SC1091,SC2086
	source $1/bin/activate
}

h2() {
	if [ -z "$1" ]; then
		echo -e "\nCall 'H2 <port>' to run this command\n"
	else
		echo "server {
    listen       80;
    listen  [::]:80;
    server_name  127.0.0.1;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        proxy_pass http://127.0.0.1:$1;

        proxy_http_version          1.1;
        proxy_buffering             off;
        proxy_redirect              off;
        proxy_max_temp_file_size    0;
    }
}" >$HOME/default.conf

		docker stop $(docker ps -a | awk '{print $(NF)}' | grep host80 | sed 's/==.*//g' | tr '\n' ' ') >/dev/null 2>&1
		docker rm $(docker ps -a | awk '{print $(NF)}' | grep host80 | sed 's/==.*//g' | tr '\n' ' ') >/dev/null 2>&1

		docker run --rm -d --network host \
			--name host80 \
			-v $HOME/default.conf:/etc/nginx/conf.d/default.conf nginx
	fi
}
